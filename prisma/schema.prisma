generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Resume {
  id               Int              @id @default(autoincrement())
  fileName         String
  name             String
  email            String?
  skills           String[]
  experience       Int?
  atsScore         Int?
  domain           String
  education        String?
  location         String?
  offerLetters     OfferLetter[]    @relation("ResumeOfferLetters")
  jobDescriptionId Int?          // Foreign key
  //jobDescription   JobDescription?  @relation(fields: [jobDescriptionId], references: [id])
  summary          String?
}

model OfferLetter {
  id         Int      @id @default(autoincrement())
  resumeId   Int
  jobTitle   String
  status     String   @default("Pending")
  sentDate   DateTime @default(now())
  Resume     Resume   @relation("ResumeOfferLetters", fields: [resumeId], references: [id])
}

model User {
  id             String    @id @default(cuid())
  name           String?
  email          String?   @unique
  emailVerified  DateTime?
  image          String?
  role           String    @default("user")
  accounts       Account[]
  sessions       Session[]
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?
  user               User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verification_tokens")
}


model JobDescription {
  id             Int      @id @default(autoincrement())
  title          String
  description    String?
  requiredSkills String[]
  
  
}
